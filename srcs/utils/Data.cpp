#include "utils/Data.hpp"

Data::Data() {
	std::cout << "TEST" << std::endl;
	_mimeTypes["html"] = "text/html";
	_mimeTypes["htm"] = "text/html";
	_mimeTypes["shtml"] = "text/html";
	_mimeTypes["css"] = "text/css";
	_mimeTypes["xml"] = "text/xml";
	_mimeTypes["gif"] = "image/gif";
	_mimeTypes["jpeg"] = "image/jpeg";
	_mimeTypes["jpg"] = "image/jpeg";
	_mimeTypes["js"] = "application/javascript";
	_mimeTypes["atom"] = "application/atom+xml";
	_mimeTypes["rss"] = "application/rss+xml";
	_mimeTypes["mml"] = "text/mathml";
	_mimeTypes["txt"] = "text/plain";
	_mimeTypes["jad"] = "text/vnd.sun.j2me.app-descriptor";
	_mimeTypes["wml"] = "text/vnd.wap.wml";
	_mimeTypes["htc"] = "text/x-component";
	_mimeTypes["png"] = "image/png";
	_mimeTypes["tif"] = "image/tiff";
	_mimeTypes["tiff"] = "image/tiff";
	_mimeTypes["wbmp"] = "image/vnd.wap.wbmp";
	_mimeTypes["ico"] = "image/x-icon";
	_mimeTypes["jng"] = "image/x-jng";
	_mimeTypes["bmp"] = "image/x-ms-bmp";
	_mimeTypes["svg"] = "image/svg+xml";
	_mimeTypes["svgz"] = "image/svg+xml";
	_mimeTypes["webp"] = "image/webp";
	_mimeTypes["woff"] = "application/font-woff";
	_mimeTypes["jar"] = "application/java-archive";
	_mimeTypes["war"] = "application/java-archive";
	_mimeTypes["ear"] = "application/java-archive";
	_mimeTypes["json"] = "application/json";
	_mimeTypes["hqx"] = "application/mac-binhex40";
	_mimeTypes["doc"] = "application/msword";
	_mimeTypes["pdf"] = "application/pdf";
	_mimeTypes["ps"] = "application/postscript";
	_mimeTypes["eps"] = "application/postscript";
	_mimeTypes["ai"] = "application/postscript";
	_mimeTypes["rtf"] = "application/rtf";
	_mimeTypes["m3u8"] = "application/vnd.apple.mpegurl";
	_mimeTypes["xls"] = "application/vnd.ms-excel";
	_mimeTypes["eot"] = "application/vnd.ms-fontobject";
	_mimeTypes["ppt"] = "application/vnd.ms-powerpoint";
	_mimeTypes["wmlc"] = "application/vnd.wap.wmlc";
	_mimeTypes["kml"] = "application/vnd.google-earth.kml+xml";
	_mimeTypes["kmz"] = "application/vnd.google-earth.kmz";
	_mimeTypes["7z"] = "application/x-7z-compressed";
	_mimeTypes["cco"] = "application/x-cocoa";
	_mimeTypes["jardiff"] = "application/x-java-archive-diff";
	_mimeTypes["jnlp"] = "application/x-java-jnlp-file";
	_mimeTypes["run"] = "application/x-makeself";
	_mimeTypes["pl"] = "application/x-perl";
	_mimeTypes["pm"] = "application/x-perl";
	_mimeTypes["prc"] = "application/x-pilot";
	_mimeTypes["pdb"] = "application/x-pilot";
	_mimeTypes["rar"] = "application/x-rar-compressed";
	_mimeTypes["rpm"] = "application/x-redhat-package-manager";
	_mimeTypes["sea"] = "application/x-sea";
	_mimeTypes["swf"] = "application/x-shockwave-flash";
	_mimeTypes["sit"] = "application/x-stuffit";
	_mimeTypes["tcl"] = "application/x-tcl";
	_mimeTypes["tk"] = "application/x-tcl";
	_mimeTypes["der"] = "application/x-x509-ca-cert";
	_mimeTypes["pem"] = "application/x-x509-ca-cert";
	_mimeTypes["crt"] = "application/x-x509-ca-cert";
	_mimeTypes["xpi"] = "application/x-xpinstall";
	_mimeTypes["xhtml"] = "application/xhtml+xml";
	_mimeTypes["xspf"] = "application/xspf+xml";
	_mimeTypes["zip"] = "application/zip";
	_mimeTypes["bin"] = "application/octet-stream";
	_mimeTypes["exe"] = "application/octet-stream";
	_mimeTypes["dll"] = "application/octet-stream";
	_mimeTypes["deb"] = "application/octet-stream";
	_mimeTypes["dmg"] = "application/octet-stream";
	_mimeTypes["iso"] = "application/octet-stream";
	_mimeTypes["img"] = "application/octet-stream";
	_mimeTypes["msi"] = "application/octet-stream";
	_mimeTypes["msp"] = "application/octet-stream";
	_mimeTypes["msm"] = "application/octet-stream";
	_mimeTypes["docx"] = "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
	_mimeTypes["xlsx"] = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
	_mimeTypes["pptx"] = "application/vnd.openxmlformats-officedocument.presentationml.presentation";
	_mimeTypes["mid"] = "audio/midi";
	_mimeTypes["midi"] = "audio/midi";
	_mimeTypes["kar"] = "audio/midi";
	_mimeTypes["mp3"] = "audio/mpeg";
	_mimeTypes["ogg"] = "audio/ogg";
	_mimeTypes["m4a"] = "audio/x-m4a";
	_mimeTypes["ra"] = "audio/x-realaudio";
	_mimeTypes["3gpp"] = "video/3gpp";
	_mimeTypes["3gp"] = "video/3gpp";
	_mimeTypes["ts"] = "video/mp2t";
	_mimeTypes["mp4"] = "video/mp4";
	_mimeTypes["mpeg"] = "video/mpeg";
	_mimeTypes["mpg"] = "video/mpeg";
	_mimeTypes["mov"] = "video/quicktime";
	_mimeTypes["webm"] = "video/webm";
	_mimeTypes["flv"] = "video/x-flv";
	_mimeTypes["m4v"] = "video/x-m4v";
	_mimeTypes["mng"] = "video/x-mng";
	_mimeTypes["asx"] = "video/x-ms-asf";
	_mimeTypes["asf"] = "video/x-ms-asf";
	_mimeTypes["wmv"] = "video/x-ms-wmv";
	_mimeTypes["avi"] = "video/x-msvideo";
}

Data::~Data() {}

const std::map<std::string, std::string> &Data::getMimeTypes() const {
	return (_mimeTypes);
}
